--4.selectGroupFunction.sql
-- 그룹함수란? 다수의 행 데이터를 한번에 처리
-- 장점 : 함수 연산시 null 데이터 고려, sql문장 작업 용이
/*
1. count() : 개수 확인 함수
2. sum() : 합계 함수
3. avg() : 평균
4. max(), min() : 최대값, 최소값
*/


/* 기본 문법
1. select절
2. from 절
3. where절

 * 그룹함수시 사용되는 문법
1. select절 : 검색하고자 하는 속성
2. from절	: 검색 table
3. group by 절 : 특정 조건별 그룹화하고자 하는 속성
4. having 절 : 그룹함수 사용시 조건절
5. order by절 : 검색된 데이터를 정렬

* 실행 순서 : ?
*/

--1. count() : 개수 확인 함수
-- emp table의 직원이 몇명?

select count(*) from emp;

--? comm 받는 직원 수만 검색

select count(comm) from emp;


--2. sum() : 합계 함수
-- ? 모든 사원의 월급여(sal)의 합

select sum(sal) from emp;

--? 모든 직원이 받는 comm 합

 select sum(comm) from emp;

--?  MANAGER인 직원들의  월급여의 합 

select sum(sal) from emp where job='MANAGER';

--? job 종류 counting[절대 중복 불가 = distinct]
-- select count(job) from emp;
select job from emp;
select distinct job from emp;

--select distinct count(job) from emp;
--논리적인 오류: 집계 이후에 distinct는 의미없음

--select count(distinct(job)) from emp;
	->5

--3. avg() : 평균
--? emp table의 모든 직원들의 급여 평균 검색

select avg(sal) from emp;

--? 커미션 받는 사원수, 총 커미션 합, 평균 구하기

select count(comm) from emp;
select sum(comm) from emp;
select avg(comm) from emp;

--4. max(), min() : 최대값, 최소값
-- 숫자, date 타입에 사용 가능

--최대 급여, 최소 급여 검색
select max(sal) from emp;
select min(sal) from emp;

--?최근 입사한 사원의 입사일과, 가장 오래된 사원의 입사일 검색
-- 오라클의 date 즉 날짜를 의미하는 타입도 연산 가능
-- max(), min() 함수 사용해 보기

select max(hiredate) from emp;
select min(hiredate) from emp;

--***
/* group by 절
- 특정 컬럼값을 기준으로 그룹화
	가령, 10번 부서끼리, 20번 부서끼리...
-select절
 from절
 where절
 order by절

 -select절
  from절
  group by절
*/

--step 01:부서별 emp table로 부터 comm count하세요
-select deptno, count(comm)
 from emp
 group by deptno;

--step 02:deptno라는 부서 번호를 오름차순으로 정렬
select deptno, count(comm)
from emp
group by deptno
order by deptno asc;

--실행 순서: from -> group by -> select -> order by
--step02-2 : 실행순서 확인
select deptno, count(comm)
from emp
group by deptno
order by deptno asc;
\


--step 03:사원명도 검색
/* group by 절로 특정 컬럼으로 검색시에는 group by 절에 적용된 컬럼 값 외에는 검색 불가
select ename, deptno, count(comm)
from emp
group by deptno
order by deptno asc;   =>오류
*/
-- 부서별 커미션 받는 사원수 

select count(comm) from emp group by deptno;

--? 부서별 급여 평균 구함(그룹함수 사용시 부서번호별로 그룹화 작업후 평균 연산)

select deptno, avg(sal) 평균급여 from emp group by deptno;

--? 소속 부서별 급여 총액과 평균 급여 검색[deptno 오름차순 정렬]
select deptno 부서, sum(sal) 급여총액 , avg(sal) 평균급여 from emp group by deptno order by deptno;

--? 소속 부서별 최대 급여와 최소 급여 검색[deptno 오름차순 정렬]
select deptno 부서, max(sal) "최대 급여", min(sal) "최소 급여"  from emp group by deptno order by deptno;

-- 컬럼명 별칭에 여백을 넣기위해서 " " 가능 (쌍따옴표만 가능)


-- *** having절 *** [ 조건을 주고 검색하기 ]
-- 그룹함수 사용시 조건문

--1. ? 부서별(group by) 사원의 수(count(*))와 커미션(count(comm)) 받는 사원의 수
select count(*), count(comm),deptno from emp group by deptno;


--2. ? 부서별 그룹을 지은후(group by deptno), 
-- 부서별 평균 급여(avg())가 2000 이상인 부서의 번호와 평균 급여 검색  
select deptno, avg(sal)
from emp
group by deptno
having avg(sal) >= 2000;

--step 02: deptno로 정렬
select deptno, avg(sal)
from emp
group by deptno
having avg(sal) >= 2000;
order by deptno asc;

--step 03 :avg(sal) 평균 급여라는 별칭 부여, 평균급여로 정렬
select deptno, avg(sal) 평균급여
from emp
group by deptno
having avg(sal) >= 2000;
order by 평균급여 asc;

step 4 눈으로만 생각하고 표현해보기
	-- 1단계 : 비정상?
	-- 2단계 : 조건문장이 먼저 실행되어야 하기 때문에 평균급여 라는 단어 자체가 미존재
	-- 3단계 : 실행 순서
/* 오류
select deptno, avg(sal) 평균급여
from emp
group by deptno
having 평균급여 >=2000


--3. 부서의 급여중 최대값(max)과 최소값(min)을 구하되 최대 급여가 2900이상(having)인 부서만 출력
--부서(deptno)의 급여(sal)중 최대값(max)과 최소값(min)을 구하되 최대 급여가(max) 2900이상(having)인 부서(deptno)만 출력

select deptno, max(sal), min(sal) from emp group by deptno having(max(sal))>=2900;

--? 문제 2문제를 직접 제시하기 
1. 오늘 배운내용 review 
Q. 각 직급별 최대 급여 검색
A. select job 직급, max(sal) "최대 급여" from emp group by job;

2. where, having 다 포함해서 문제 만들고 답안 도출
Q. 부서별로 커미션을 받는 부서만 구하되, 최소급여가 1300이상인 정보만 출력 
A. select deptno from emp where comm is not null group by deptno having(avg(sal))>=1300;

