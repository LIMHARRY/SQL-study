--10.view.sql
/*
* view 사용을 위한 필수 선행 설정
	1단계: admin 계정으로 접속 
		connect system manger
	2단계: view 생성해도 되는 사용자 계정에게 생성 권한 부여
		grant create view to SCOTT;

1. view 에 대한 학습
	- 물리적으로는 미 존재, 단 논리적으로 존재
	- 물리적(create table)
	- 논리적(존재하는 table들에 종속적인 가상 table)
	/* 
	test 해볼만한 항목
	1. 생성
	2. 검색(query, 질의, select), update, insert, delete - CRUD
	3. insert/update/delete 시 물리적인 table에 영향을 미치나?
	*/

2. 개념
	- 보안을 고려해야 하는 table의 특정 컬럼값 은닉
	또는 여러개의 table의 조인된 데이터를 다수 활용을 해야 할 경우
	특정 컬럼 은닉, 다수 table 조인된 결과의 새로운 테이블 자체를 
	가상으로 db내에 생성시킬수 있는 기법 

3. 문법
	- create와 drop : create view/drop view
	- crud는 table과 동일

4. view기반으로 crud 반영시 실제 원본 table에도 반영이 되나?

5. 종류
	5-1. 단일 view : 별도의 조인 없이 하나의 table로 부터 파생된 view
	5-2. 복합 view : 다수의 table에 조인 작업의 결과값을 보유하는 view
	5-3. 인라인 view : sql의 from 절에 view 문장  

6. 실습 table
	-dept01 table생성 -> dept01_v view 를 생성 -> crud -> view select/dept01 select 
*/
--1. test table생성
drop view dept01_v;
drop table dept01;
create table dept01 as select * from dept;


--2. dept01 table상의 view를 생성
-- SCOTT 계정으로 view 생성 권한 받은 직후에만 가능
create view dept01_v as select * from dept01;

desc dept01_v;
select * from dept01_v;


--3. ? emp table에서 comm을 제외한 emp01_v 라는 view 생성
drop view emp01_v;

create table emp01 as select * from emp;
create view emp01_v as select empno, ename, sal from emp01;

desc emp01_v;
select * from emp01_v;


--4. dept01_v에 crud : dep01_v와 dept01 table 변화 동시 검색
select * form dept01_v;
insert into dept01_v values(50, '교육부', '홍대');
select * from dept01_v;
select * from dept01;


update dept01_v set loc='마포' where deptno=50;
select * from dept01_v;
select * from dept01;


delete from dept01_v where deptno=50;
select * from dept01_v;
select * from dept01; 


--5. view의 특정 컬럼만 수정 금지
	-- with check option 표기법 사용
drop view dept01_v;

create view dept02_v as select * from dept
where deptno=30 with check option;


update dept02_v set loc='홍대' where deptno=10;
update dept02_v set loc='홍대' where deptno=30;
--update dept02_v set deptno=50 where loc='홍대'; 



--6. view자체에 DML(insert/delete/update) 금지[select만 가능한 view]
	-- with read only

drop view dept01_v;
create view dept01_v as select * from dept01 where deptno=30 with read only;

insert into dept01_v values(50, '총무부', '종로');



--7. 모든 end user가 빈번히 사용하는 sql문장으로 해당 직원의 모든 정보 검색하기
/* 개발 방법
- 두개의 join 필수
방법1: 필요시 늘 join 하는 sql문장 실행
방법2: 이미 조인된 구조의 view를 생성해 놓고, 필요시만 view만 select(현업에서 주로 사용)

	-- 두개의 table을 join 	
	--? emp01_dept01_v 라는 view 생성하기 
		-- 모든 고객의 모든 정보를 보유한 view
drop table emp01;
drop table dept01;
create table emp01 as select empno, ename, deptno, sal from emp;
create table dept01 as select * from dept;

create view emp01_dept01_v as select empno, ename, e.deptno, sal, dname, loc from emp01 e dept01 d where e.deptno=d.deptno;




--8. 논리적인 가상의 table이 어떤 구조로 되어 있는지 확인 가능한 oracle  자체 table
	-- view는 text 기반으로 명령어가 저장 

select * from user_views;
desc user_views;


